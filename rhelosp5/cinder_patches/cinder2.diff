From 9845764fb33ec826aff7da8325661b86915c1994 Mon Sep 17 00:00:00 2001
From: Sergey Gotliv <sgotliv@redhat.com>
Date: Sun, 11 Jan 2015 18:19:59 +0200
Subject: [PATCH] rtstool: Update credentials when target(LIO) already exists

CHAP credentials are generated on the fly When trying to create a target.
The problem starts when rtstool, which responsible to create a target for
LVM ISCSI driver configured with LIO helper, detects that this target already
exists and reports back success but actually does nothing. Cinder updates Nova
with newly generated credentials while portal attached access control
lists (acl) still keep old credentials. Any attempt to perform login
from Nova to that portal will fail due to the credentials' mismatch.

This patch updates acl credentials when target already exists to prevent
such a mismatch.

Change-Id: I030a67a6e2a04c8dda02096b972fcb770e442fd8
Closes-Bug: #1409409
---
 cinder/cmd/rtstool.py | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/cinder/cmd/rtstool.py b/cinder/cmd/rtstool.py
index afbf8c6..b7a186f 100644
--- a/cinder/cmd/rtstool.py
+++ b/cinder/cmd/rtstool.py
@@ -43,7 +43,8 @@ def create(backing_device, name, userid, password, initiator_iqns=None):
     # Look to see if BlockStorageObject already exists
     for x in rtsroot.storage_objects:
         if x.name == name:
-            # Already exists, use this one
+            # Already exists, update credentials
+            _update_credentials(name, userid, password)
             return
 
     so_new = rtslib.BlockStorageObject(name=name,
@@ -81,7 +82,15 @@ def create(backing_device, name, userid, password, initiator_iqns=None):
         pass
 
 
-def _lookup_target(target_iqn, initiator_iqn):
+def _update_credentials(target_iqn, userid, password):
+    target = _lookup_target(target_iqn)
+    for tpg in target.tpgs:
+            for acl in tpg.node_acls:
+                acl.chap_userid = userid
+                acl.chap_password = password
+
+
+def _lookup_target(target_iqn):
     try:
         rtsroot = rtslib.root.RTSRoot()
     except rtslib.utils.RTSLibError:
@@ -96,12 +105,13 @@ def _lookup_target(target_iqn, initiator_iqn):
 
 
 def add_initiator(target_iqn, initiator_iqn, userid, password):
-    target = _lookup_target(target_iqn, initiator_iqn)
+    target = _lookup_target(target_iqn)
     tpg = target.tpgs.next()  # get the first one
     for acl in tpg.node_acls:
         # See if this ACL configuration already exists
         if acl.node_wwn == initiator_iqn:
-            # No further action required
+            acl.chap_userid = userid
+            acl.chap_password = password
             return
 
     acl_new = rtslib.NodeACL(tpg, initiator_iqn, mode='create')
@@ -112,7 +122,7 @@ def add_initiator(target_iqn, initiator_iqn, userid, password):
 
 
 def delete_initiator(target_iqn, initiator_iqn):
-    target = _lookup_target(target_iqn, initiator_iqn)
+    target = _lookup_target(target_iqn)
     tpg = target.tpgs.next()  # get the first one
     for acl in tpg.node_acls:
         if acl.node_wwn == initiator_iqn:
-- 
1.8.3.1

